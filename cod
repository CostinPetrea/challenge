//challenge of Section 9

/*
    This challenge is about using a collection (list) of integers and allowing the user
    to select options from a menu to perform operations on the list.
    
    Your program should display a menu options to the user as follows:
    
    P - print numbers 
    A - add a number
    M - Display mean of the numbers
    S - Display the smallest numbers
    L - Display the largest number
    Q - quit
    
    Enter your choice:
    
The program should only accept valid choices from the user, both upper and lowercase selections should be allowed.
If an illegal choice is made, you should display, "Unknown selection, please try again" and the menu options should be
displayed again.


If the user enters 'P' or 'p', you should display all the elements (ints) in the list.
If the list is empty you should display "[] - the list is empty".
If the list is not empty then all the list element should be displayed inside square brackets separated by a space.
For example, [ 1 2 3 4 5]

If the user enters 'A' or 'a' then you should prompt the user for an integer to add to the list 
which you will add to the list and then display it was added. For example, if the user enters 5
You should display "5 added".
Duplicate list entries are OK


If the user enters 'M' or 'm' you should calculate the mean of average of the elements in the list and display it.
If the list is empty you should display. "Unable to calculate the mean - no data."


If the user enters 'S' or 's' you should display the smallest element in the list.
Ex: list [ 2 4 5 1] cout << "The smallest number is 1"
if list empty << "Unable to determinate the smallest number - list is empty"


If the user enters 'L' or 'l' you should display the largest element in the list
if list empty << "Unable to determinate the largest number - list is empty"


If the user enters 'Q' or 'q' then you should display "Goodbye" and the program should terminate

Before you begin. Write out the steps you need to take and decide  in what order they should be done.
Think about what loops you should use as well as what you will use for the selection logic.

This exercise can be challenging! it may likely take a few attempts before you complete it -- that's OK!

Finally, be sure to test your program as you go and at the end.

Hint: Use a vector!


Additional functionality if you wish to extend this program.

-search for a number in the list and if found display the number of times it occurs in the list
-clearing out the list (make it empty again) (Hint: the vector class hasa clear() method)
-don't allow duplicate entries
-come up with your own ideas!

Good Luck! */


#include <iostream>
#include <vector>

using namespace std;

int main()
{    
    char selection {};
    vector <int> list { };
    
    do {        
        cout << "Chose one of the following menu options:" << endl;
        cout << "==========================" << endl;
        cout << " P - print numbers \n A - add a number \n M - Display mean of the numbers \n S - Display the smallest numbers \n L - Display the largest number \n Q - quit" << endl;
        cout << "==========================" << endl;
        cout << "Enter your choice: ";
        cin >> selection;
        cout << endl;

        
        if (selection == 'P' || selection == 'p') {
            cout << "You chose P - print numbers" << endl;
            if ( !list.empty() ) {
                cout << "The numbers are: [ ";
                
                for (unsigned i = 0; i < list.size(); ++i ) {
                    cout << list[i] << " ";
                }
                    cout << "]" << endl;
            } else {
                cout << "[] - the list is empty" << endl;
            }

            
        } else if (selection == 'A' || selection == 'a') {
            cout << "You chose A - add a number" << endl;
            cout << "Enter an integer: ";
            int user_input {0};
            cin >> user_input;
            
            list.push_back(user_input);
            cout << user_input << " added" << endl;
           
 
        } else if (selection == 'M' || selection == 'm') {
            cout << "You chose M - Display mean of the numbers" << endl;
           if ( !list.empty() ) {
                int average {0};
                int sum {0};
                
                for (unsigned i = 0; i < list.size(); ++i) {
                    sum += list[i];
                }
                average = sum / list.size();
                cout << "The mean of  numbers is: " << average << endl;
                
           } else {
               cout << "Unable to calculate the mean - no data." << endl;
           }
           
           
        } else if (selection == 'S' || selection == 's') {
            cout << "You chose S - Display the smallest number" << endl;
            if ( !list.empty() ) {
                int compare_smallest {list[0]};
                for (unsigned i = 0; i < list.size(); ++i){
                    if (list[i] < compare_smallest)
                        compare_smallest = list[i];
                }
                cout << "The smaller number is: " << compare_smallest << endl;
            } else {
              cout <<  "Unable to determinate the smallest number - list is empty" << endl;
            }
        
        
        } else if (selection == 'L' || selection == 'l') {
            cout << "You chose L - Display the largest number" << endl;
            if ( !list.empty() ) {
                int compare_largest {list[0]};
                for (unsigned i = 0; i < list.size(); ++i){
                    if (list[i] > compare_largest)
                        compare_largest = list[i];
                    }
            cout << "The largest number is: " << compare_largest << endl;

            } else {
              cout <<  "Unable to determinate the largest number - list is empty" << endl;
            }
            
            
        } else if (selection == 'Q' || selection == 'q') {
            cout << "You chose Q - quit" << endl;
            cout << "Goodbye..." << endl;
            
            
        } else {
            cout << "Unkown selection, please try again!" << endl;
        }
        
    } while (selection != 'q' && selection != 'Q');
    
    cout << endl;
    return 0;
}
